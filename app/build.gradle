plugins {
    id "com.android.application"
    id "com.google.protobuf"
    id "com.likethesalad.stem"
}

def keyfile
def keystorePSW
def keystoreAlias
def keystoreAliasPSW

Properties properties = new Properties()
properties.load(project.rootProject.file("local.properties").newDataInputStream())
def keystoreFilepath = properties.getProperty("keystore.path")

if (keystoreFilepath) {
    keyfile = file(keystoreFilepath)
    keystorePSW = properties.getProperty("keystore.password")
    keystoreAlias = properties.getProperty("keystore.alias")
    keystoreAliasPSW = properties.getProperty("keystore.alias_password")
} else {
    // Remember to config your keystore settings in local.properties or in the below lines
    keyfile = file("C:/keystore.jks")
    keystorePSW = "CHANGEME"
    keystoreAlias = "CHANGEME"
    keystoreAliasPSW = "CHANGEME"
}

android {
    namespace "com.jacopomii.gappsmod"
    compileSdk 34

    defaultConfig {
        applicationId "com.jacopomii.gappsmod"
        minSdk 21
        targetSdk 34
        versionCode 400
        versionName "4.00"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    signingConfigs {
        release {
            storeFile keyfile
            storePassword keystorePSW
            keyAlias keystoreAlias
            keyPassword keystoreAliasPSW
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.release
        }
    }

    buildFeatures {
        viewBinding true
        aidl true
        buildConfig true
    }

    sourceSets {
        main {
            res.srcDirs = ["src/main/res",
                           "src/main/res/layouts/activities",
                           "src/main/res/layouts/dialogs",
                           "src/main/res/layouts/fragments",
                           "src/main/res/layouts/items"]
        }
    }
}

dependencies {
    // Libsu
    def libsuVersion = "5.2.2"
    implementation "com.github.topjohnwu.libsu:core:${libsuVersion}"
    implementation "com.github.topjohnwu.libsu:service:${libsuVersion}"
    implementation "com.github.topjohnwu.libsu:nio:${libsuVersion}"

    // Official SQLite Java Bindings, downloaded from https://www.sqlite.org/download.html
    implementation files("libs/sqlite-android-3410200.aar")

    // Advanced toast
    implementation "com.github.GrenderG:Toasty:1.5.2"

    // HTTP
    implementation "com.android.volley:volley:1.2.1"

    // Protobuf
    implementation "com.google.protobuf:protobuf-javalite:3.25.3"

    // Apache Commons
    //noinspection GradleDependency
    implementation "commons-io:commons-io:2.15.1"
    implementation "org.apache.commons:commons-lang3:3.14.0"

    // Navigation drawer
    def navigationVersion = "2.7.7"
    implementation "androidx.navigation:navigation-fragment:${navigationVersion}"
    implementation "androidx.navigation:navigation-ui:${navigationVersion}"

    // FastScroller for RecyclerView
    implementation "io.github.l4digital:fastscroll:2.1.0"

    // Other UI Components
    implementation "com.google.android.material:material:1.11.0"
    implementation "androidx.appcompat:appcompat:1.6.1"
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.25.3"
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option "lite"
                }
            }
        }
    }
}
